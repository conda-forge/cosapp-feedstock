{% set name = "cosapp" %}
{% set version = "0.15.4" %}
{% set pypi_version = "0.15.4" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ pypi_version }}.tar.gz
  sha256: 56f8ff60173e23949fad74f51f6af118a4f4bb06f7aa1add7874cbbdb62a9867

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv

requirements:
  host:
    - python >=3.8
    - pip
  run:
    - python >=3.8
    - pandas
    - jsonschema
    - jinja2
    - numpy >=1.12
    - scipy
    - wrapt

test:
  requires:
    - python=3.10
    - coverage
    - pytest
    - pythonfmu <0.6.3  # [not osx]
    - watchdog
  commands:
    - python -m cosapp.tests.all_tests

about:
  home: https://cosapp.readthedocs.io
  summary: CoSApp, the Collaborative System Approach.
  description: |
    The primary goal of **CoSApp** is to help technical departments in the design of complex systems.
    To do so, the framework allows the simulation of various systems representing the different parts
    of the final product in a common environment. The benefit is the ability for each subsystem team
    to carry out design study with a direct feedback at product level.

    The main features are:

    - Butterfly effect

    Couple your simulation models with CoSApp to get immediate impact on main product variables
    and iterate to converge on a better design.

    - Design guidance

    All systems can share design parameters associated with an acceptable range. You can take advantage
    of those limited degrees of freedom without fear of breaking your collaborators' work.

    - Flexible simulation workflows

    CoSApp solvers can be combined into versatile, customized workflows that fit specific simulation intents.
  keywords: cosapp, system simulation, system design
  dev_url: https://gitlab.com/cosapp/cosapp
  license: Apache-2.0
  license_file: LICENSE.rst

extra:
  recipe-maintainers:
    - elac-safran
